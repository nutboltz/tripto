// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trip {
  id              String            @id @default(uuid())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  deletedAt       DateTime?
  participants    User[]            @relation("TripParticipants")
  destination     String?
  itinerary       Json?
  startDate       DateTime?
  endDate         DateTime?
  tripPreferences TripPreferences[] @relation("TripPreferences")
}

model User {
  id              String            @id @default(uuid())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  deletedAt       DateTime?
  email           String            @unique
  name            String?
  tripPreferences TripPreferences[] @relation("UserTripPreferences")
  trips           Trip[]            @relation("TripParticipants")
}

model TripPreferences {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  preferences Json /// Leaving this as a json to be flexible
  trip        Trip      @relation("TripPreferences", fields: [tripId], references: [id])
  tripId      String
  user        User      @relation("UserTripPreferences", fields: [userEmail], references: [email])
  userEmail   String

  @@unique([tripId, userEmail])
}
